{"version":3,"sources":["../../src/utils/build-html.js"],"names":["require","store","createErrorFromString","debug","module","exports","program","directory","pages","getState","map","page","path","compilerConfig","resolve","reject","run","e","stats","hasErrors","webpackErrors","toJson","errors","unlinkSync"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;eACkBA,QAAS,UAAT,C;IAAVC,K,YAAAA,K;;gBAC0BD,QAAS,oBAAT,C;IAA1BE,qB,aAAAA,qB;;AAER,IAAMC,QAAQH,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAI,OAAOC,OAAP;AAAA,wEAAiB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,qBADO,GACOD,OADP,CACPC,SADO;;;AAGfJ,kBAAO,wBAAP;AACA;AACMK,iBALS,GAKDP,MAAMQ,QAAN,GAAiBD,KAAjB,CAAuBE,GAAvB,CAA2B;AAAA,qBAAQC,KAAKC,IAAb;AAAA,aAA3B,CALC;;AAOf;;AAPe;AAAA,mBAQc,uBAC3BN,OAD2B,EAE3BC,SAF2B,EAG1B,YAH0B,EAI3B,IAJ2B,EAK3BC,KAL2B,CARd;;AAAA;AAQTK,0BARS;AAAA,6CAgBR,uBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,qCAAQF,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAClD,oBAAID,CAAJ,EAAO;AACL,yBAAOF,OAAOE,CAAP,CAAP;AACD;AACD,oBAAIC,MAAMC,SAAN,EAAJ,EAAuB;AACrB,sBAAIC,gBAAgBF,MAAMG,MAAN,GAAeC,MAAnC;AACA,yBAAOP,OAAOb,sBAAsBkB,cAAc,CAAd,CAAtB,CAAP,CAAP;AACD;;AAED;AACA,oBAAI;AACF,+BAAGG,UAAH,CAAe,GAAEhB,SAAU,wBAA3B;AACD,iBAFD,CAEE,OAAOU,CAAP,EAAU;AACV;AACD;AACD,uBAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,eAhBD;AAiBD,aAlBM,CAhBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"build-html.js","sourcesContent":["/* @flow */\nimport webpack from \"webpack\"\nimport Promise from \"bluebird\"\nimport fs from \"fs\"\nimport webpackConfig from \"./webpack.config\"\nconst { store } = require(`../redux`)\nconst { createErrorFromString } = require(`../reporter/errors`)\n\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n  // Reduce pages objects to an array of paths.\n  const pages = store.getState().pages.map(page => page.path)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-html`,\n    null,\n    pages\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        return reject(createErrorFromString(webpackErrors[0]))\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(`${directory}/public/render-page.js`)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n      return resolve(null, stats)\n    })\n  })\n}\n"]}